SQL - Banco de Dados

Estrutura Básica
- Arquivo -> Tabela -> Registro
- Tipos de Registro:
- Registro Sequencial: Precisa ler todos os registros até chegar no desejado.
- Registro Direto: Usa índices para acessar o registro sem precisar percorrer todos.

Componentes de um Banco de Dados
1. Base de Dados
2. Sistema Gerenciador
3. Linguagem de Exploração
4. Programas Adicionais

Analogia
- Navio = Banco de Dados (conjunto de tabelas)
- Container = Tabela (conjunto de registros)
- Dados = Registros
- Registros = Campos

---

Tipos de Comandos SQL

1. DDL (Data Definition Language – Linguagem de Definição de Dados)
Usado para definir e modificar a estrutura do banco de dados.
- `CREATE` – Cria tabelas, bancos de dados, índices, etc.
- `ALTER` – Modifica estruturas existentes.
- `DROP` – Remove tabelas, bancos de dados ou índices.
- `TRUNCATE` – Apaga todos os dados de uma tabela sem remover sua estrutura.

2. DML (Data Manipulation Language – Linguagem de Manipulação de Dados)
Usado para inserir, modificar e excluir dados.
- `INSERT` – Insere dados em uma tabela.
- `UPDATE` – Atualiza registros existentes.
- `DELETE` – Remove registros da tabela.
- `MERGE` – Combina `INSERT`, `UPDATE` e `DELETE`.

3. DQL (Data Query Language – Linguagem de Consulta de Dados)
Usado para consultar dados.
- `SELECT` – Recupera informações de uma ou mais tabelas.

4. DCL (Data Control Language – Linguagem de Controle de Dados)
Controla permissões e acessos.
- `GRANT` – Concede permissões.
- `REVOKE` – Revoga permissões.

5. TCL (Transaction Control Language – Linguagem de Controle de Transação)
Gerencia transações.
- `COMMIT` – Confirma alterações.
- `ROLLBACK` – Desfaz alterações.
- `SAVEPOINT` – Cria um ponto de restauração.

---

Constraints (Parâmetros)
- NOT NULL – Obriga o campo a ser preenchido.
- AUTO_INCREMENT – Preenchimento automático.
- DEFAULT – Define um valor padrão.
- UNIQUE – Não permite valores repetidos.

---

Comandos Básicos

Criar um banco de dados
```sql
CREATE DATABASE cadastro
DEFAULT CHARACTER SET utf8
DEFAULT COLLATE utf8_general_ci;
```

Criar uma tabela
```sql
CREATE TABLE IF NOT EXISTS cursos (...);
```

```sql
CREATE TABLE pessoas (
    id INT NOT NULL AUTO_INCREMENT,
    nome VARCHAR(30) NOT NULL,
    nascimento DATE,
    sexo ENUM('M', 'F'),
    peso DECIMAL(5,2),
    altura DECIMAL(3,2),
    nacionalidade VARCHAR(20) DEFAULT 'Brasil',
    PRIMARY KEY (id)
) DEFAULT CHARSET = utf8;
```

Descrever uma tabela
```sql
DESCRIBE tabela;
```

Usar um banco de dados
```sql
USE cadastro;
```

Apagar um banco de dados
```sql
DROP DATABASE nome_banco;
```

Apagar uma tabela
```sql
DROP TABLE nome_tabela;
```

Alterar nome de uma tabela
```sql
ALTER TABLE nome_tabela RENAME TO novo_nome;
```

Alterar colunas de uma tabela
- Adicionar coluna:
```sql
ALTER TABLE pessoas ADD COLUMN profissao VARCHAR(10);
```
- Modificar coluna:
```sql
ALTER TABLE pessoas MODIFY COLUMN profissao VARCHAR(20) NOT NULL DEFAULT '';
```
- Renomear coluna:
```sql
ALTER TABLE pessoas CHANGE COLUMN profissao prof VARCHAR(20) NOT NULL DEFAULT '';
```

---

Tipos Primitivos de Dados

1. Numéricos
Inteiros
- `TINYINT`
- `SMALLINT`
- `INT`
- `MEDIUMINT`
- `BIGINT`

Reais
- `DECIMAL(5,2)` – Define precisão decimal.
- `FLOAT`
- `DOUBLE`
- `REAL`

Lógico
- `BIT`
- `BOOLEAN`

2. Data/Tempo
- `DATE`
- `DATETIME`
- `TIMESTAMP`
- `TIME`
- `YEAR`

3. Literais
Caractere
- `CHAR(30)` – Preenche espaço se não atingir o limite.
- `VARCHAR(30)` – Armazena apenas o necessário.

Texto
- `TINYTEXT`
- `TEXT`
- `MEDIUMTEXT`
- `LONGTEXT`

Binário
- `TINYBLOB`
- `BLOB`
- `MEDIUMBLOB`
- `LONGBLOB`

Coleção
- `ENUM('M', 'F')` – Restringe a valores predefinidos.
- `SET`

4. Espaciais (Dados volumétricos)
- `GEOMETRY`
- `POINT`
- `POLYGON`
- `MULTIPOLYGON`

